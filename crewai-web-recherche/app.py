# -*- coding: utf-8 -*-
"""CrewAI - Outil de recherche sur le web.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IRUGbvSxvjVwAfQHDoTbGiHz-T-161Gb

# Construire un outil de recherche sur le web avec CrewAI
"""

!pip install crewai crewai-tools

"""## Étape 1 : Scraping d'un site web"""

from crewai_tools import ScrapeWebsiteTool, FileWriterTool, TXTSearchTool
import requests

# Initialiser l'outil avec l'URL du site web,
# afin que l'agent ne puisse récupérer que le contenu du site web spécifié.
tool = ScrapeWebsiteTool(website_url='https://fr.wikipedia.org/wiki/Intelligence_artificielle')

# Extraire le texte du site
text = tool.run()
print(text)

"""## Étape 2 : Écrire le texte extrait dans un fichier"""

# Initialiser l'outil
file_writer_tool = FileWriterTool()

# Écrire du contenu dans un fichier situé dans un répertoire spécifié
result = file_writer_tool._run(filename='ia.txt', content=text, directory='', overwrite=True)
print(result)

"""## Étape 3 : Configurer l'outil de recherche de texte"""

import os

os.environ['OPENAI_API_KEY'] = 'CLÉ OPENAI'
os.environ["OPENAI_MODEL_NAME"] = "gpt-5-nano"

# Initialiser l'outil avec un fichier texte spécifique
# afin que l'agent puisse effectuer des recherches dans le contenu du fichier texte donné.
tool = TXTSearchTool(txt='ia.txt')

"""## Étape 4 : Créer un agent pour la tâche et l'exécuter"""

# Première recherche pour obtenir le contexte pertinent
# Cette étape trouve les passages du texte qui parlent de NLP
context = tool.run("Qu'est-ce que le traitement du langage naturel ?")
print(context)

from crewai import Agent, Task, Crew

# Création de notre agent éducateur
data_analyst = Agent(
    role='Vulgarisateur',  # Rôle de l'agent : il doit expliquer et enseigner
    goal=f'Basé sur le contexte fourni, répondre à la question - Qu\'est-ce que le Traitement du Langage Naturel ? Contexte - {context}',
    backstory='Tu es un expert en données spécialisé dans l\'explication de concepts complexes',
    verbose=True,  # Affiche les détails du processus de réflexion
    allow_delegation=False,  # L'agent ne peut pas déléguer à d'autres agents
    tools=[tool]  # Outils disponibles pour l'agent
)

# Définition de la tâche à accomplir
test_task = Task(
    description="Comprendre le sujet et donner la réponse correcte sur le Traitement du Langage Naturel",
    tools=[tool],  # Outils que la tâche peut utiliser
    agent=data_analyst,  # Agent assigné à cette tâche
    expected_output='Donner une réponse correcte et détaillée sur le NLP'
)

# Création de l'équipe (Crew) avec notre agent et notre tâche
crew = Crew(
    agents=[data_analyst],  # Liste des agents dans l'équipe
    tasks=[test_task]       # Liste des tâches à accomplir
)

# Lancement de l'exécution de l'équipe
# kickoff() démarre le processus et retourne le résultat final
output = crew.kickoff()